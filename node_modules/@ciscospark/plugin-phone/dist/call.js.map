{"version":3,"sources":["../src/call.js"],"names":["Call","extend","namespace","children","media","session","correlationId","facingMode","type","values","locus","localMediaStream","localMediaStreamUrl","locusJoinInFlight","default","locusLeaveInFlight","remoteMediaStreamUrl","derived","id","deps","fn","url","isActive","activeParticipants","activeParticipantsCount","length","joined","joinedOnThisDevice","spark","locusUrl","device","self","devices","item","mediaConnection","mediaConnections","mediaId","remoteAudioMuted","remote","remoteVideoMuted","direction","from","local","to","status","state","remoteMediaStream","receivingAudio","receivingVideo","sendingAudio","sendingVideo","initialize","args","prototype","listenTo","mercury","event","_onLocusEvent","error","trigger","on","stopListening","off","URL","revokeObjectURL","undefined","createOffer","then","offer","updateMedia","sdp","_fetchExpectedLocus","_setLocus","JSON","parse","remoteSdp","acceptAnswer","catch","reason","emit","createObjectURL","unset","mode","forEach","key","logger","info","hangup","previousLocus","previousAttributes","answer","options","resolve","peer","_join","acknowledge","alert","dial","invitee","validate","parsed","decode","split","resourceType","registered","connected","connect","reject","end","when","_hangup","leave","decline","toggleFacingMode","constraints","audio","audioConstraint","video","videoConstraint","Error","exact","phone","createLocalMediaStream","stream","once","startSendingAudio","_changeSendingMedia","startSendingVideo","startReceivingAudio","_changeReceivingMedia","startReceivingVideo","toggleReceivingAudio","stopReceivingAudio","toggleReceivingVideo","stopReceivingVideo","toggleSendingAudio","stopSendingAudio","toggleSendingVideo","stopSendingVideo","sendFeedback","feedback","metrics","submit","value","_updateSendingMedia","set","localDescription","audioMuted","videoMuted","get","locusMethodName","target","defaultFacingMode","recvOnly","offerOptions","offerToReceiveAudio","offerToReceiveVideo","mediaOptions","v4","localSdp","signalingState","ended","data","eventType","incoming","current","action","compare","locusAudio","audioStatus","toLowerCase","mediaAudio","warn","locusVideo","videoStatus","mediaVideo","make","attrs"],"mappings":"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","file":"call.js","sourcesContent":["/**!\n *\n * Copyright (c) 2016-2017 Cisco Systems, Inc. See LICENSE file.\n * @private\n */\n\n/* eslint-env browser: true */\n/* global RTCPeerConnection, RTCSessionDescription */\n\nimport {SparkPlugin} from '@ciscospark/spark-core';\nimport {base64, oneFlight, retry, tap, whileInFlight} from '@ciscospark/common';\nimport {\n  USE_INCOMING,\n  FETCH\n} from '@ciscospark/plugin-locus';\nimport {debounce, defaults, find, get, set} from 'lodash';\nimport {\n  activeParticipants,\n  direction,\n  isActive,\n  joined,\n  joinedOnThisDevice,\n  participantIsJoined,\n  remoteAudioMuted,\n  remoteParticipant,\n  remoteVideoMuted\n} from './state-parsers';\nimport boolToStatus from './bool-to-status';\n\nimport WebRTCMedia from './web-rtc-media';\nimport uuid from 'uuid';\n\n/**\n * @event ringing\n * @instance\n * @memberof Call\n */\n\n/**\n * @event connected\n * @instance\n * @memberof Call\n */\n\n/**\n * @event disconnected\n * @instance\n * @memberof Call\n */\n\n/**\n * @event localMediaStream:change\n * @instance\n * @memberof Call\n */\n\n/**\n * @event remoteMediaStream:change\n * @instance\n * @memberof Call\n */\n\n/**\n * @event error\n * @instance\n * @memberof Call\n */\n\n/**\n * Payload for {@link Call#sendFeedback}\n * @typedef {Object} Types~Feedback\n * @property {number} userRating Number between 1 and 5 (5 being best) to let\n * the user score the call\n * @property {string} userComments Freeform feedback from the user about the\n * call\n * @property {Boolean} includeLogs set to true to submit client logs to the\n * Cisco Spark cloud. Note: at this time, all logs, not just call logs,\n * generated by the sdk will be uploaded to the Spark Cloud. Care has been taken\n * to avoid including PII in these logs, but if you've taken advantage of the\n * SDK's logger, you should make sure to avoid logging PII as well.\n */\n\n/**\n * @class\n * @extends SparkPlugin\n */\nconst Call = SparkPlugin.extend({\n  namespace: `Phone`,\n\n  children: {\n    media: WebRTCMedia\n  },\n\n  session: {\n    correlationId: `string`,\n    /**\n     * @instance\n     * @memberof Call\n     * @type {string}\n     * @readonly\n     */\n    facingMode: {\n      type: `string`,\n      values: [`user`, `environment`]\n    },\n    locus: `object`,\n    /**\n     * Returns the local MediaStream for the call. May initially be `null`\n     * between the time @{Phone#dial is invoked and the  media stream is\n     * acquired if {@link Phone#dial} is invoked without a `localMediaStream`\n     * option.\n     *\n     * This property can also be set mid-call in which case the streams sent to\n     * the remote party are replaced by this stream. On success, the\n     * {@link Call}'s {@link localMediaStream:change} event fires, notifying any\n     * listeners that we are now sending media from a new source.\n     * @instance\n     * @memberof Call\n     * @type {MediaStream}\n     */\n    localMediaStream: `object`,\n    /**\n     * Object URL that refers to {@link Call#localMediaStream}. Will be\n     * automatically deallocated when the call ends\n     * @instance\n     * @memberof Call\n     * @type {string}\n     * @readonly\n     */\n    localMediaStreamUrl: `string`,\n\n    locusJoinInFlight: {\n      default: false,\n      type: `boolean`\n    },\n    locusLeaveInFlight: {\n      default: false,\n      type: `boolean`\n    },\n    /**\n     * Object URL that refers to {@link Call#remoteMediaStream}. Will be\n     * automatically deallocated when the call ends\n     * @instance\n     * @memberof Call\n     * @type {string}\n     * @readonly\n     */\n    remoteMediaStreamUrl: `string`\n  },\n\n  // Note, in its current form, any derived property that is an object will emit\n  // a change event everytime a locus gets replaced, even if no values change.\n  // For the moment, this is probably ok; once we have multi-party, regular\n  // change events on activeParticipants may be a problem.\n  derived: {\n    id: {\n      deps: [`locus`],\n      fn() {\n        return this.locus && this.locus.url;\n      }\n    },\n    isActive: {\n      deps: [`locus`],\n      fn() {\n        return this.locus && isActive(this.locus);\n      }\n    },\n    activeParticipants: {\n      deps: [`locus`],\n      fn() {\n        return activeParticipants(this.locus);\n      }\n    },\n    activeParticipantsCount: {\n      deps: [`activeParticipants`],\n      fn() {\n        return this.activeParticipants.length;\n      }\n    },\n    joined: {\n      deps: [`locus`],\n      default: false,\n      fn() {\n        return this.locus && joined(this.locus);\n      }\n    },\n    joinedOnThisDevice: {\n      deps: [`locus`],\n      default: false,\n      fn() {\n        return this.locus && joinedOnThisDevice(this.spark, this.locus);\n      }\n    },\n    locusUrl: {\n      deps: [`locus`],\n      fn() {\n        return this.locus.url;\n      }\n    },\n    device: {\n      deps: [`locus`],\n      fn() {\n        return this.locus.self && find(this.locus.self.devices, (item) => item.url === this.spark.device.url);\n      }\n    },\n    mediaConnection: {\n      deps: [`device`],\n      fn() {\n        return this.device && this.device.mediaConnections && this.device.mediaConnections[0];\n      }\n    },\n    mediaId: {\n      deps: [`mediaConnection`],\n      fn() {\n        return this.mediaConnection && this.mediaConnection.mediaId;\n      }\n    },\n    remoteAudioMuted: {\n      deps: [`remote`],\n      fn() {\n        return remoteAudioMuted(this.remote);\n      }\n    },\n    remoteVideoMuted: {\n      deps: [`remote`],\n      fn() {\n        return remoteVideoMuted(this.remote);\n      }\n    },\n    direction: {\n      deps: [`locus`],\n      fn() {\n        // This seems brittle, but I can't come up with a better way. The only\n        // way we should have a Call without a locus is if we just initiated a\n        // call but haven't got the response from locus yet.\n        if (!this.locus) {\n          return `out`;\n        }\n        return direction(this.locus);\n      }\n    },\n    from: {\n      deps: [\n        `direction`,\n        `local`,\n        `remote`\n      ],\n      fn() {\n        return this.direction === `out` ? this.local : this.remote;\n      }\n    },\n    to: {\n      deps: [\n        `direction`,\n        `local`,\n        `remote`\n      ],\n      fn() {\n        return this.direction === `in` ? this.local : this.remote;\n      }\n    },\n    local: {\n      deps: [`locus`],\n      fn() {\n        return this.locus && this.locus.self;\n      }\n    },\n    remote: {\n      deps: [`locus`],\n      fn() {\n        return this.locus && remoteParticipant(this.locus);\n      }\n    },\n    /**\n     * <b>initiated</b> - Offer was sent to remote party but they have not yet accepted <br>\n     * <b>ringing</b> - Remote party has acknowledged the call <br>\n     * <b>connected</b> - At least one party is still on the call <br>\n     * <b>disconnected</b> - All parties have dropped <br>\n     * @instance\n     * @memberof Call\n     * @member {string}\n     * @readonly\n     */\n    status: {\n      deps: [\n        `joinedOnThisDevice`,\n        `local`,\n        `remote`\n      ],\n      fn() {\n        if (this.joinedOnThisDevice && this.remote && participantIsJoined(this.remote)) {\n          return `connected`;\n        }\n\n        if (this.remote && this.local) {\n          if (this.remote.state === `LEFT` || this.local.state === `LEFT`) {\n            return `disconnected`;\n          }\n\n          if (this.remote.state === `DECLINED`) {\n            return `disconnected`;\n          }\n\n          if (this.remote.state === `NOTIFIED`) {\n            return `ringing`;\n          }\n        }\n\n        return `initiated`;\n      }\n    },\n    /**\n     * Access to the remote party’s `MediaStream`.\n     * @instance\n     * @memberof Call\n     * @member {MediaStream}\n     * @readonly\n     */\n    remoteMediaStream: {\n      deps: [`media.remoteMediaStream`],\n      fn() {\n        return this.media.remoteMediaStream;\n      }\n    },\n    receivingAudio: {\n      deps: [`media.receivingAudio`],\n      fn() {\n        return this.media.receivingAudio;\n      }\n    },\n    receivingVideo: {\n      deps: [`media.receivingVideo`],\n      fn() {\n        return this.media.receivingVideo;\n      }\n    },\n    sendingAudio: {\n      deps: [`media.sendingAudio`],\n      fn() {\n        return this.media.sendingAudio;\n      }\n    },\n    sendingVideo: {\n      deps: [`media.sendingVideo`],\n      fn() {\n        return this.media.sendingVideo;\n      }\n    }\n  },\n\n  /**\n   * Initializer\n   * @private\n   * @param {Object} attrs\n   * @param {Object} options\n   * @returns {undefined}\n   */\n  initialize(...args) {\n    Reflect.apply(SparkPlugin.prototype.initialize, this, args);\n\n    this.listenTo(this.spark.mercury, `event:locus`, (event) => this._onLocusEvent(event));\n    this.listenTo(this.media, `error`, (error) => this.trigger(`error`, error));\n    this.on(`disconnected`, () => {\n      this.stopListening(this.spark.mercury);\n      this.off();\n      URL.revokeObjectURL(this.localMediaStreamUrl);\n      this.localMediaStreamUrl = undefined;\n      URL.revokeObjectURL(this.remoteMediaStreamUrl);\n      this.remoteMediaStreamUrl = undefined;\n    });\n\n    this.listenTo(this.media, `negotiationneeded`, debounce(() => {\n      this.media.createOffer()\n        .then((offer) => this.spark.locus.updateMedia(this.locus, {\n          sdp: offer,\n          mediaId: this.mediaId\n        }))\n        .then(() => this._fetchExpectedLocus())\n        .then((locus) => {\n          this._setLocus(locus);\n          const sdp = JSON.parse(this.mediaConnection.remoteSdp).sdp;\n          return this.media.acceptAnswer(sdp);\n        })\n        .catch((reason) => this.emit(`error`, reason));\n    }));\n\n    this.on(`change:remoteMediaStream`, () => {\n      if (this.remoteMediaStreamUrl) {\n        URL.revokeObjectURL(this.remoteMediaStreamUrl);\n      }\n      if (this.remoteMediaStream) {\n        this.remoteMediaStreamUrl = URL.createObjectURL(this.remoteMediaStream);\n      }\n      else {\n        this.unset(`remoteMediaStreamUrl`);\n      }\n    });\n\n    // Reminder: this is not a derived property so that we can reassign the\n    // stream midcall\n    this.on(`change:media.localMediaStream`, () => {\n      this.localMediaStream = this.media.localMediaStream;\n      if (this.localMediaStreamUrl) {\n        URL.revokeObjectURL(this.localMediaStreamUrl);\n      }\n      if (this.localMediaStream) {\n        this.localMediaStreamUrl = URL.createObjectURL(this.localMediaStream);\n      }\n      else {\n        this.unset(`localMediaStreamUrl`);\n      }\n    });\n\n    this.on(`change:localMediaStream`, () => {\n      if (this.media.localMediaStream !== this.localMediaStream) {\n        this.media.localMediaStream = this.localMediaStream;\n      }\n\n\n      if (this.facingMode) {\n        const mode = get(this, `media.videoConstraint.facingMode.exact`);\n        if (mode === `user`) {\n          this.facingMode = `user`;\n        }\n\n        if (mode === `environment`) {\n          this.facingMode = `environment`;\n        }\n      }\n    });\n\n    [\n      `remoteMediaStream`,\n      `remoteMediaStreamUrl`,\n      `localMediaStream`,\n      `localMediaStreamUrl`,\n      `remoteAudioMuted`,\n      `remoteVideoMuted`\n    ].forEach((key) => {\n      this.on(`change:${key}`, () => this.trigger(`${key}:change`));\n    });\n\n    // This handler is untested because there's no way to provoke it. It's\n    // probably actually only relevant for group calls.\n    this.on(`change:isActive`, () => {\n      if (!this.isActive) {\n        if (this.joinedOnThisDevice) {\n          this.logger.info(`call: hanging up due to locus going inactive`);\n          this.hangup();\n        }\n      }\n    });\n\n    this.on(`change:activeParticipantsCount`, () => {\n      const previousLocus = this.previousAttributes().locus;\n      if (this.joinedOnThisDevice && this.activeParticipantsCount === 1 && previousLocus && activeParticipants(previousLocus).length > 1) {\n        this.logger.info(`call: hanging up due to last participant in call`);\n        this.hangup();\n      }\n    });\n\n    this.on(`change:status`, () => {\n      switch (this.status) {\n      case `ringing`:\n        this.trigger(`ringing`);\n        break;\n      case `connected`:\n        this.trigger(`connected`);\n        break;\n      case `disconnected`:\n        this.trigger(`disconnected`);\n        break;\n      default:\n        // do nothing\n      }\n    });\n  },\n\n  /**\n   * Answers an incoming call. Only applies to incoming calls. Invoking this\n   * method on an outgoing call is a noop\n   * @instance\n   * @memberof Call\n   * @param {Object} options\n   * @param {MediaStreamConstraints} options.constraints\n   * @returns {Promise}\n   */\n  @oneFlight\n  @whileInFlight(`locusJoinInFlight`)\n  answer(options) {\n    this.logger.info(`call: answering`);\n    if (!this.locus || this.direction === `out`) {\n      this.logger.info(`call: outbound call, answer() is a noop`);\n      return Promise.resolve();\n    }\n    // Locus may think we're joined on this device if we e.g. reload the page,\n    // so, we need to check if we also have a working peer connection\n    if (this.joinedOnThisDevice && this.media.peer) {\n      this.logger.info(`call: already joined on this device`);\n      return Promise.resolve();\n    }\n    return this._join(`join`, this.locus, options)\n      .then(tap(() => this.logger.info(`call: answered`)));\n  },\n\n  /**\n   * Use to acknowledge (without answering) an incoming call. Will cause the\n   * initiator's Call instance to emit the ringing event.\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  @oneFlight\n  acknowledge() {\n    this.logger.info(`call: acknowledging`);\n    return this.spark.locus.alert(this.locus)\n      .then((locus) => this._setLocus(locus))\n      .then(tap(() => this.logger.info(`call: acknowledged`)));\n  },\n\n  /**\n   * Used by {@link Phone#dial} to initiate an outbound call\n   * @instance\n   * @memberof Call\n   * @param {[type]} invitee\n   * @param {[type]} options\n   * @private\n   * @returns {[type]}\n   */\n  @oneFlight\n  dial(invitee, options) {\n    this.locusJoinInFlight = true;\n    this.logger.info(`call: dialing`);\n\n    if (base64.validate(invitee)) {\n      // eslint-disable-next-line no-unused-vars\n      const parsed = base64.decode(invitee).split(`/`);\n      const resourceType = parsed[3];\n      const id = parsed[4];\n      if (resourceType === `PEOPLE`) {\n        invitee = id;\n      }\n    }\n\n    this.logger.info(this.registered, !!this.spark.device.url, this.connected, this.spark.mercury.connected, this.spark.device.url);\n\n    // Note: mercury.connect() will call device.register() if need. We're not\n    // using phone.register() here because it guarantees a device refresh, which\n    // is probably unnecessary.\n    this.spark.mercury.connect()\n      .then(() => this._join(`create`, invitee, options))\n      .then(tap(() => this.logger.info(`call: dialed`)))\n      .catch((reason) => {\n        this.trigger(`error`, reason);\n      })\n      .then(() => {\n        this.locusJoinInFlight = false;\n      });\n\n    return this;\n  },\n\n  /**\n   * Disconnects the active call. Applies to both incoming and outgoing calls.\n   * This method may be invoked in any call state and the SDK should take care\n   * to tear down the call and free up all resources regardless of the state.\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  hangup() {\n    // Note: not a @oneFlight because this function must call itself\n    if (this.direction === `in` && !this.joinedOnThisDevice) {\n      return this.reject();\n    }\n\n    this.logger.info(`call: hanging up`);\n\n    this.media.end();\n\n    if (this.locusJoinInFlight) {\n      this.logger.info(`call: locus join in flight, waiting for rest call to complete before hanging up`);\n      return this.when(`change:locusJoinInFlight`)\n        .then(() => this.hangup());\n    }\n\n    if (!this.locus) {\n      this.stopListening(this.spark.mercury);\n      this.off();\n      this.logger.info(`call: hang up complete, call never created`);\n      return Promise.resolve();\n    }\n\n    return this._hangup();\n  },\n\n  /**\n   * Does the internal work necessary to end a call while allowing hangup() to\n   * call itself without getting stuck in promise change because of oneFlight\n   * @private\n   * @returns {Promise}\n   */\n  @oneFlight\n  @whileInFlight(`locusLeaveInFlight`)\n  _hangup() {\n    return this.spark.locus.leave(this.locus)\n      .then((locus) => this._setLocus(locus))\n      .then(tap(() => this.stopListening(this.spark.mercury)))\n      .then(tap(() => this.off()))\n      .then(tap(() => this.logger.info(`call: hung up`)));\n  },\n\n  /**\n   * Alias of {@link Call#reject}\n   * @see {@link Call#reject}\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  decline() {\n    return this.reject();\n  },\n\n  /**\n   * Rejects an incoming call. Only applies to incoming calls. Invoking this\n   * method on an outgoing call is a no-op.\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  @oneFlight\n  reject() {\n    if (this.direction === `out`) {\n      return Promise.resolve();\n    }\n\n    this.logger.info(`call: rejecting`);\n    /* eslint no-invalid-this: [0] */\n    return this.spark.locus.decline(this.locus)\n      .then((locus) => this._setLocus(locus))\n      .then(tap(() => this.stopListening(this.spark.mercury)))\n      .then(tap(() => this.off()))\n      .then(tap(() => this.logger.info(`call: rejected`)));\n  },\n\n  /**\n   * Replaces the current mediaStrem with one with identical constraints, except\n   * for an opposite facing mode. If the current facing mode cannot be\n   * determined, the facing mode will be set to `user`. If the call is audio\n   * only, this function will throw.\n   * @returns {undefined}\n   */\n  toggleFacingMode() {\n    const constraints = {\n      audio: Object.assign({}, this.media.audioConstraint),\n      video: this.media.videoConstraint\n    };\n\n    if (!constraints.video) {\n      throw new Error(`Cannot toggle facignMode on audio-only call`);\n    }\n\n    if (this.facingMode !== `user` && this.facingMode !== `environment`) {\n      throw new Error(`Cannot determine current facing mode; specify a new localMediaStream to change cameras`);\n    }\n\n    if (constraints.video === true) {\n      constraints.video = {\n        facingMode: {\n          exact: this.facingMode\n        }\n      };\n    }\n\n    if (this.facingMode === `user`) {\n      set(constraints, `video.facingMode.exact`, `environment`);\n    }\n    else {\n      set(constraints, `video.facingMode.exact`, `user`);\n    }\n\n    return this.spark.phone.createLocalMediaStream(constraints)\n      .then((stream) => new Promise((resolve) => {\n        this.media.once(`answeraccepted`, resolve);\n        this.localMediaStream = stream;\n      }))\n      .then(() => {\n        this.facingMode = constraints.video.facingMode.exact;\n      });\n  },\n\n  /**\n   * Starts sending audio to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  startSendingAudio() {\n    return this._changeSendingMedia(`audio`, true);\n  },\n\n  /**\n   * Starts sending video to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  startSendingVideo() {\n    return this._changeSendingMedia(`video`, true);\n  },\n\n  startReceivingAudio() {\n    return this._changeReceivingMedia(`offerToReceiveAudio`, true);\n  },\n\n  startReceivingVideo() {\n    return this._changeReceivingMedia(`offerToReceiveVideo`, true);\n  },\n\n  /**\n   * Toggles receiving audio from the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleReceivingAudio() {\n    return this.receivingAudio ? this.stopReceivingAudio() : this.startReceivingAudio();\n  },\n\n  /**\n   * Toggles receiving video from the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleReceivingVideo() {\n    return this.receivingVideo ? this.stopReceivingVideo() : this.startReceivingVideo();\n  },\n\n  stopReceivingAudio() {\n    return this._changeReceivingMedia(`offerToReceiveAudio`, false);\n  },\n\n  stopReceivingVideo() {\n    return this._changeReceivingMedia(`offerToReceiveVideo`, false);\n  },\n\n  /**\n   * Toggles sending audio to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleSendingAudio() {\n    return this.sendingAudio ? this.stopSendingAudio() : this.startSendingAudio();\n  },\n\n  /**\n   * Toggles sending video to the Cisco Spark Cloud\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  toggleSendingVideo() {\n    return this.sendingVideo ? this.stopSendingVideo() : this.startSendingVideo();\n  },\n\n  /**\n   * Sends feedback about the call to the Cisco Spark cloud\n   * @instance\n   * @memberof Call\n   * @param {Types~Feedback} feedback\n   * @returns {Promise}\n   */\n  sendFeedback(feedback) {\n    return this.spark.metrics.submit(`meetup_call_user_rating`, feedback);\n  },\n\n  /**\n   * Stops sending audio to the Cisco Spark Cloud. (stops broadcast immediately,\n   * even if renegotiation has not completed)\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  stopSendingAudio() {\n    return this._changeSendingMedia(`audio`, false);\n  },\n\n  /**\n   * Stops sending video to the Cisco Spark Cloud. (stops broadcast immediately,\n   * even if renegotiation has not completed)\n   * @instance\n   * @memberof Call\n   * @returns {Promise}\n   */\n  stopSendingVideo() {\n    return this._changeSendingMedia(`video`, false);\n  },\n\n  _changeSendingMedia(key, value) {\n    return new Promise((resolve) => {\n      this.once(`change:sending${key === `audio` ? `Audio` : `Video`}`, () => resolve(this._updateSendingMedia()));\n      this.media.set(key, value);\n    });\n  },\n\n  @oneFlight\n  _updateSendingMedia() {\n    // This method should never send a new sdp; if we performed an action that\n    // would cause a new sdp, the onnegotiationneeded handler should exchange\n    // it. this means that for a number of scenarios, we must call update media\n    // twice.\n    return this.spark.locus.updateMedia(this.locus, {\n      sdp: this.media.peer.localDescription.sdp,\n      mediaId: this.mediaId,\n      audioMuted: !this.sendingAudio,\n      videoMuted: !this.sendingVideo\n    })\n    .then(() => this.spark.locus.get(this.locus))\n    .then((locus) => this._setLocus(locus));\n  },\n\n  // The complexity in _join is largely driven up by fairly readable `||`s\n  @oneFlight\n  // eslint-disable-next-line complexity\n  _join(locusMethodName, target, options = {}) {\n\n    if (options.localMediaStream) {\n      this.media.set(`localMediaStream`, options.localMediaStream);\n    }\n    else {\n      if (!options.constraints) {\n        options.constraints = {\n          audio: true,\n          video: {\n            facingMode: {\n              exact: this.spark.phone.defaultFacingMode\n            }\n          }\n        };\n      }\n      const mode = get(options, `constraints.video.facingMode.exact`);\n      if (mode === `user` || mode === `environment`) {\n        this.facingMode = mode;\n      }\n\n      const recvOnly = !options.constraints.audio && !options.constraints.video;\n      options.offerOptions = defaults(options.offerOptions, {\n        offerToReceiveAudio: recvOnly || !!options.constraints.audio,\n        offerToReceiveVideo: recvOnly || !!options.constraints.video\n      });\n    }\n\n    const mediaOptions = {};\n    if (options.constraints) {\n      mediaOptions.audio = options.constraints.audio;\n      mediaOptions.video = options.constraints.video;\n    }\n\n    if (options.offerOptions) {\n      mediaOptions.offerToReceiveAudio = options.offerOptions.offerToReceiveAudio;\n      mediaOptions.offerToReceiveVideo = options.offerOptions.offerToReceiveVideo;\n    }\n\n    if (mediaOptions.offerOptions || options.constraints) {\n      this.media.set(mediaOptions);\n    }\n\n    if (!target.correlationId) {\n      this.correlationId = options.correlationId = uuid.v4();\n    }\n\n    if (!this.correlationId) {\n      this.correlationId = target.correlationId;\n    }\n\n    return this.media.createOffer()\n      .then((offer) => this.spark.locus[locusMethodName](target, {\n        localSdp: offer,\n        correlationId: this.correlationId\n      }))\n      .then((locus) => {\n        this._setLocus(locus);\n        const answer = JSON.parse(this.mediaConnection.remoteSdp).sdp;\n        this.logger.info(`accepting offer`);\n        this.logger.info(`peer state`, this.media.peer && this.media.peer.signalingState);\n        if (!this.media.ended) {\n          return this.media.acceptAnswer(answer)\n            .then(() => this.logger.info(`offer accepted`));\n        }\n        this.logger.info(`call: already ended, not accepting answer`);\n        return Promise.resolve();\n      });\n  },\n\n  _onLocusEvent(event) {\n    const device = find(event.data.locus.self.devices, (item) => item.url === this.spark.device.url);\n    if (this.locus && event.data.locus.url === this.locus.url || this.correlationId && this.correlationId === device.correlationId) {\n      this.logger.info(`locus event: ${event.data.eventType}`);\n      this._setLocus(event.data.locus);\n    }\n  },\n\n  _setLocus(incoming) {\n    const current = this.locus;\n    if (!current) {\n      this.locus = incoming;\n      return Promise.resolve();\n    }\n    const action = this.spark.locus.compare(current, incoming);\n\n    switch (action) {\n    case USE_INCOMING:\n      this.locus = incoming;\n      // certain reasons for setting a locus (such as from calling\n      // acknowledge())\n      if (this.device) {\n        this.correlationId = this.device.correlationId;\n      }\n      break;\n    case FETCH:\n      return this.spark.locus.get(current)\n         .then((locus) => this._setLocus(locus));\n    default:\n      // do nothing\n    }\n\n    return Promise.resolve();\n  },\n\n  _changeReceivingMedia(key, value) {\n    return new Promise((resolve) => {\n      this.once(`change:receiving${key === `offerToReceiveAudio` ? `Audio` : `Video`}`, () => resolve());\n      this.media.set(key, value);\n    });\n  },\n\n  /**\n   * The response to a PUT to LOCUS/media may not be fully up-to-dat when we\n   * receive it. This method polls locus until we get a locus with the status\n   * properties we expect (or three errors occur)\n   * @returns {Promise<Types~Locus>}\n   */\n  @retry\n  _fetchExpectedLocus() {\n    return this.spark.locus.get(this.locus)\n      .then((locus) => {\n        const locusAudio = locus.self.status.audioStatus.toLowerCase();\n        const mediaAudio = boolToStatus(this.media.audio, this.media.offerToReceiveAudio);\n        if (locusAudio !== mediaAudio) {\n          this.logger.warn(`expected audio ${locusAudio} (locus) to equal ${mediaAudio} (local media)`);\n          throw new Error(`locus.self.status.audioStatus indicates the received DTO is out of date`);\n        }\n\n        const locusVideo = locus.self.status.videoStatus.toLowerCase();\n        const mediaVideo = boolToStatus(this.media.video, this.media.offerToReceiveVideo);\n        if (locusVideo !== mediaVideo) {\n          this.logger.warn(`expected video ${locusVideo} (locus) to equal ${mediaVideo} (local media)`);\n          throw new Error(`locus.self.status.videoStatus indicates the received DTO is out of date`);\n        }\n\n        return locus;\n      });\n  }\n});\n\nCall.make = function make(attrs, options) {\n  return new Call(attrs, options);\n};\n\nexport default Call;\n"]}